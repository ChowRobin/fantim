// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

/*
Package vo is a generated protocol buffer package.

It is generated from these files:
	common.proto
	friend_list.proto
	group_create.proto
	group_list.proto
	group_member_list.proto
	group_search.proto
	login.proto
	message_pull.proto
	message_search.proto
	message_send.proto
	relation_apply_create.proto
	relation_apply_list.proto
	relation_apply_update.proto
	sign_up.proto
	user_info.proto
	user_search.proto

It has these top-level messages:
	User
	MessageBody
	PushMessage
	RelationApply
	GroupInfo
	GroupMember
*/
package vo

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type User struct {
	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Avatar   string `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

func (m *User) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type MessageBody struct {
	ConversationType int32             `protobuf:"varint,1,opt,name=conversation_type,json=conversationType" json:"conversation_type,omitempty"`
	ConversationId   string            `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	MsgType          int32             `protobuf:"varint,3,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	Content          string            `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	Ext              map[string]string `protobuf:"bytes,5,rep,name=ext" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status           int32             `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	CreateTime       int64             `protobuf:"varint,7,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Sender           int64             `protobuf:"varint,8,opt,name=sender" json:"sender,omitempty"`
	MsgId            int64             `protobuf:"varint,9,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	MsgIdStr         string            `protobuf:"bytes,10,opt,name=msg_id_str,json=msgIdStr" json:"msg_id_str,omitempty"`
	Receiver         int64             `protobuf:"varint,11,opt,name=receiver" json:"receiver,omitempty"`
}

func (m *MessageBody) Reset()         { *m = MessageBody{} }
func (m *MessageBody) String() string { return proto.CompactTextString(m) }
func (*MessageBody) ProtoMessage()    {}

func (m *MessageBody) GetConversationType() int32 {
	if m != nil {
		return m.ConversationType
	}
	return 0
}

func (m *MessageBody) GetConversationId() string {
	if m != nil {
		return m.ConversationId
	}
	return ""
}

func (m *MessageBody) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *MessageBody) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MessageBody) GetExt() map[string]string {
	if m != nil {
		return m.Ext
	}
	return nil
}

func (m *MessageBody) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MessageBody) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MessageBody) GetSender() int64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *MessageBody) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *MessageBody) GetMsgIdStr() string {
	if m != nil {
		return m.MsgIdStr
	}
	return ""
}

func (m *MessageBody) GetReceiver() int64 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

type PushMessage struct {
	PushType int32        `protobuf:"varint,1,opt,name=push_type,json=pushType" json:"push_type,omitempty"`
	Body     *MessageBody `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Index    int32        `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *PushMessage) Reset()         { *m = PushMessage{} }
func (m *PushMessage) String() string { return proto.CompactTextString(m) }
func (*PushMessage) ProtoMessage()    {}

func (m *PushMessage) GetPushType() int32 {
	if m != nil {
		return m.PushType
	}
	return 0
}

func (m *PushMessage) GetBody() *MessageBody {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *PushMessage) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RelationApply struct {
	FromUserId   int64  `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId" json:"from_user_id,omitempty"`
	ToUserId     int64  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId" json:"to_user_id,omitempty"`
	ApplyType    int32  `protobuf:"varint,3,opt,name=apply_type,json=applyType" json:"apply_type,omitempty"`
	Status       int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	Content      string `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	ApplyId      int64  `protobuf:"varint,6,opt,name=apply_id,json=applyId" json:"apply_id,omitempty"`
	FromUserInfo *User  `protobuf:"bytes,7,opt,name=from_user_info,json=fromUserInfo" json:"from_user_info,omitempty"`
}

func (m *RelationApply) Reset()         { *m = RelationApply{} }
func (m *RelationApply) String() string { return proto.CompactTextString(m) }
func (*RelationApply) ProtoMessage()    {}

func (m *RelationApply) GetFromUserId() int64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *RelationApply) GetToUserId() int64 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *RelationApply) GetApplyType() int32 {
	if m != nil {
		return m.ApplyType
	}
	return 0
}

func (m *RelationApply) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RelationApply) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *RelationApply) GetApplyId() int64 {
	if m != nil {
		return m.ApplyId
	}
	return 0
}

func (m *RelationApply) GetFromUserInfo() *User {
	if m != nil {
		return m.FromUserInfo
	}
	return nil
}

type GroupInfo struct {
	GroupId     int64  `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	OwnerUid    int64  `protobuf:"varint,2,opt,name=owner_uid,json=ownerUid" json:"owner_uid,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Avatar      string `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	UserRole    int32  `protobuf:"varint,6,opt,name=user_role,json=userRole" json:"user_role,omitempty"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}

func (m *GroupInfo) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *GroupInfo) GetOwnerUid() int64 {
	if m != nil {
		return m.OwnerUid
	}
	return 0
}

func (m *GroupInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *GroupInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GroupInfo) GetUserRole() int32 {
	if m != nil {
		return m.UserRole
	}
	return 0
}

type GroupMember struct {
	UserInfo *User `protobuf:"bytes,1,opt,name=user_info,json=userInfo" json:"user_info,omitempty"`
	UserRole int32 `protobuf:"varint,2,opt,name=user_role,json=userRole" json:"user_role,omitempty"`
}

func (m *GroupMember) Reset()         { *m = GroupMember{} }
func (m *GroupMember) String() string { return proto.CompactTextString(m) }
func (*GroupMember) ProtoMessage()    {}

func (m *GroupMember) GetUserInfo() *User {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *GroupMember) GetUserRole() int32 {
	if m != nil {
		return m.UserRole
	}
	return 0
}
